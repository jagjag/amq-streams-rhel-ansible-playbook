---
- name: Grant RHEL 7 repos enabled
  shell: subscription-manager repos --enable=rhel-7-server-rpms
  register: repo_enabled
  failed_when: "repo_enabled.rc != 0"
  ignore_errors: yes
  when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "7"

- name: Create user for AMQ Streams
  user:
    name: "{{ user['name'] }}"
    shell: "{{user['shell'] if user['shell'] is defined else '/sbin/nologin'}}"
    createhome: "{{ 'yes' if user['homedir'] else 'no' }}"

- name: Install Requirements and Dependencies
  yum:
    name: 
      - unzip
      - vim
      - git
    state: present

- name: Install JDK 8
  yum:
    name:
      - java-1.8.0-openjdk-devel
    state: present
  when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "7"

- name: Install JDK 11
  yum:
    name:
      - java-11-openjdk-devel
    state: present
  when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"

- name: Set JAVA_HOME for AMQ Streams user (JDK8)
  become_user: "{{ user['name'] }}"
  lineinfile:
    dest: /home/{{ user['name'] }}/.bash_profile
    insertafter: 'EOF'
    state: present
    regexp: '^export JAVA_HOME'
    line: 'export JAVA_HOME={{ java_8_home }}'
  when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "7"

- name: Set JAVA_HOME for AMQ Streams user (JDK11)
  become_user: "{{ user['name'] }}"
  lineinfile:
    dest: /home/{{ user['name'] }}/.bash_profile
    insertafter: 'EOF'
    state: present
    regexp: '^export JAVA_HOME'
    line: 'export JAVA_HOME={{ java_11_home }}'
  when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"

- name: Source the bash_profile file
  become_user: "{{ user['name'] }}"
  shell: source /home/{{ user['name'] }}/.bash_profile

- name: Configure java 8 security
  lineinfile:
    dest: '{{ java_8_home }}/lib/security/java.security'
    regexp: '^securerandom.source='
    line: 'securerandom.source=file:/dev/./urandom'
    state: present
  when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "7"

- name: Enable service firewalld
  service:
    name: firewalld
    enabled: yes

- name: Enable Apache Zookeeper client port in firewalld
  firewalld:
    port: "{{ (2181|int + port_offset|int)|abs }}/tcp"
    permanent: yes
    state: enabled
  notify:
    - reload firewalld

- name: Enable Apache Zookeeper ensemble ports in firewalld
  firewalld:
    port: "{{ (2888|int + port_offset|int)|abs }}-{{ (3888|int + port_offset|int)|abs }}/tcp"
    permanent: yes
    state: enabled
  notify:
    - reload firewalld

- name: Enable Apache Kafka replication port in firewalld
  firewalld:
    port: "{{ (9091|int + port_offset|int)|abs }}/tcp"
    permanent: yes
    state: enabled
  notify:
    - reload firewalld

- name: Enable Apache Kafka insecured port in firewalld
  firewalld:
    port: "{{ (9092|int + port_offset|int)|abs }}/tcp"
    permanent: yes
    state: enabled
  notify:
    - reload firewalld

- name: Enable Apache Kafka secured port in firewalld
  firewalld:
    port: "{{ (9093|int + port_offset|int)|abs }}/tcp"
    permanent: yes
    state: enabled
  notify:
    - reload firewalld

- name: Enable Apache Kafka authenticated port in firewalld
  firewalld:
    port: "{{ (9094|int + port_offset|int)|abs }}/tcp"
    permanent: yes
    state: enabled
  notify:
    - reload firewalld
